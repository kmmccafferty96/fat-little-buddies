@use 'sass:map';
@use '~@angular/material' as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);

  $primary-palette: map.get($color-config, primary);
  $accent-palette: map.get($color-config, accent);
  $warn-palette: map.get($color-config, warn);

  mat-sidenav-container {
    mat-toolbar {
      button {
        &.active {
          color: mat.get-color-from-palette($accent-palette, default-contrast);
          background-color: mat.get-color-from-palette($accent-palette);
        }
      }
    }

    mat-sidenav {
      background-color: mat.get-color-from-palette($primary-palette) !important;

      .mat-list-item {
        color: mat.get-color-from-palette($primary-palette, default-contrast) !important;

        &.active {
          color: mat.get-color-from-palette($accent-palette, default-contrast) !important;
          background-color: mat.get-color-from-palette($accent-palette) !important;

          &:hover {
            background-color: mat.get-color-from-palette($accent-palette, darker) !important;
          }
        }
      }
    }

    .footer {
      color: mat.get-color-from-palette($primary-palette, lighter);
      background-color: mat.get-color-from-palette($primary-palette, darker);

      .social-links,
      .signature {
        a {
          color: mat.get-color-from-palette($primary-palette, lighter);
          &:hover {
            color: mat.get-color-from-palette($accent-palette);
          }
        }
      }
    }
  }
}

@mixin typography($theme) {
  $typography-config: mat.get-typography-config($theme);
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
